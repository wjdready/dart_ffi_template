// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// bindings
class dart_ffi_template {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  dart_ffi_template(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  dart_ffi_template.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void http_get(
    ffi.Pointer<ffi.Char> uri,
    HttpGetResponse response,
  ) {
    return _http_get(
      uri,
      response,
    );
  }

  late final _http_getPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<ffi.Char>, HttpGetResponse)>>('http_get');
  late final _http_get = _http_getPtr
      .asFunction<void Function(ffi.Pointer<ffi.Char>, HttpGetResponse)>();

  void http_serve(
    HttpServeResponse response,
  ) {
    return _http_serve(
      response,
    );
  }

  late final _http_servePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(HttpServeResponse)>>(
          'http_serve');
  late final _http_serve =
      _http_servePtr.asFunction<void Function(HttpServeResponse)>();

  void native_free(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _native_free(
      ptr,
    );
  }

  late final _native_freePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'native_free');
  late final _native_free =
      _native_freePtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();
}

typedef HttpGetResponseFunction = ffi.Void Function(ffi.Pointer<ffi.Char>);
typedef DartHttpGetResponseFunction = void Function(ffi.Pointer<ffi.Char>);
typedef HttpGetResponse
    = ffi.Pointer<ffi.NativeFunction<HttpGetResponseFunction>>;
typedef HttpServeResponseFunction = ffi.Void Function(ffi.Pointer<ffi.Char>);
typedef DartHttpServeResponseFunction = void Function(ffi.Pointer<ffi.Char>);
typedef HttpServeResponse
    = ffi.Pointer<ffi.NativeFunction<HttpServeResponseFunction>>;
